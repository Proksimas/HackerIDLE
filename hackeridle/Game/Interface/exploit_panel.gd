extends ColorRect

@onready var interrogation_label: Label = %InterrogationLabel
@onready var ipk_button: Button = %IPKButton
@onready var ipk_label: Label = %IPKLabel
@onready var cost_exploit_label: Label = %CostExploitLabel
@onready var ipc_button: Button = %IPCButton
@onready var ipc_label: Label = %IPCLabel
@onready var cost_exploit_value: Label = %CostExploitValue

@onready var shop_item: ShopItem = $"../../.."

func _ready() -> void:
	Player.s_earn_exploit_point.connect(self.refresh)
	pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta: float) -> void:
	pass


func _on_ipk_button_pressed() -> void:
	"""augmentation du gain passif de connaissance"""
	var item = shop_item.current_item_cara
	var total_cost = cost_spend_exploit()
	if total_cost > 0:
		Player.exploit_point -= total_cost
		item["level_ipk"] += 1
		refresh()
		print_debug("On a amélioré l'IPK de l'item")
	pass # Replace with function body. 


func _on_ipc_button_pressed() -> void:
	"""augmentation de la connaissance par click"""
	var item = shop_item.current_item_cara
	var total_cost = cost_spend_exploit()
	if total_cost > 0:
		Player.exploit_point -= total_cost
		item["level_ipc"] += 1
		refresh()
		print_debug("On a amélioré l'IPC de l'item")
	pass # Replace with function body.

func cost_spend_exploit() -> float:
	#_type = level_ipk or level_ipc
	var total_cost = get_cost_exploit()
	if Player.exploit_point < total_cost:
		return -1 #donc on ne peut pas acheter
	else:
		return total_cost

func get_cost_exploit() -> float:
	var item = shop_item.current_item_cara
	if item.is_empty():
		return 0
	var total_level = item["level_ipk"] + item["level_ipc"] #correspond au level total
	var total_cost = total_level + 1 * item["id"]
	return total_cost

func refresh():
	cost_exploit_label.text = tr("$Cost")
	ipk_label.text = tr("$DoubleKnowledge")
	cost_exploit_value.text = Global.number_to_string(get_cost_exploit())
	shop_item.set_refresh(shop_item.current_item_cara)

func _on_draw() -> void:
	refresh()
	pass # Replace with function body.
