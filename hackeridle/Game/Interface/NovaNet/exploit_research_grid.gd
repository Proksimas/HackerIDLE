extends GridContainer

@onready var exploit_research_label: Label = %ExploitResearchLabel
@onready var exploit_research_container: HBoxContainer = %ExploitResearchContainer
@onready var exploit_research_slider: HSlider = %ExploitResearchSlider
@onready var exploit_research_bots_value: Label = %ExploitResearchBotsValue
@onready var exploit_xp_bots_correspondence_label: Label = %ExploitXpBotsCorrespondenceLabel
@onready var next_exploit_label: Label = %NextExploitLabel
@onready var next_exploit_time_label: Label = %NextExploitTimeLabel


var time = 0
func _process(delta: float) -> void:
	time += delta
	if time >= 1:
		if self.visible:
			refresh()
		time = 0

func refresh():
	exploit_research_label.text = tr("$SearchExploits")
	
	exploit_xp_bots_correspondence_label.text = "%s exploit xp/s" % NovaNetManager.coef_exploit_xp
	var gain_second = NovaNetManager.gain_research()
	var xp_left = Player.exploit_xp_next - Player.exploit_xp
	var ratio: float

	ratio = xp_left / gain_second 
	if ratio < 1 or ratio == INF:
		ratio = 0
		
	next_exploit_label.text = tr("$Next") + " " 
	next_exploit_time_label.text = ": " + Global.convertir_secondes(ratio)

func _on_draw() -> void:
	refresh()
	pass # Replace with function body.
